{"version":3,"sources":["api/users.ts","components/UserInfo/UserInfo.tsx","components/TodoInfo/TodoInfo.tsx","components/TodoList/TodoList.tsx","App.tsx","api/todos.ts","index.tsx"],"names":["id","name","username","email","UserInfo","user","className","href","TodoInfo","todo","title","completed","cn","TodoList","todos","map","getUserById","userId","usersFromServer","find","initialTodo","App","useState","setTodos","setTitle","hasTitleError","setHasTitleError","setUserId","hasUserError","setHasUserError","addNewTodo","newTodoCard","Math","max","prevTodo","onSubmit","event","preventDefault","action","method","htmlFor","value","placeholder","type","onChange","target","disabled","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.aa2d54dd.chunk.js","sourcesContent":["export default [\n  {\n    id: 1,\n    name: 'Leanne Graham',\n    username: 'Bret',\n    email: 'Sincere@april.biz',\n  },\n  {\n    id: 2,\n    name: 'Ervin Howell',\n    username: 'Antonette',\n    email: 'Shanna@melissa.tv',\n  },\n  {\n    id: 3,\n    name: 'Clementine Bauch',\n    username: 'Samantha',\n    email: 'Nathan@yesenia.net',\n  },\n  {\n    id: 4,\n    name: 'Patricia Lebsack',\n    username: 'Karianne',\n    email: 'Julianne.OConner@kory.org',\n  },\n  {\n    id: 5,\n    name: 'Chelsey Dietrich',\n    username: 'Kamren',\n    email: 'Lucio_Hettinger@annie.ca',\n  },\n  {\n    id: 6,\n    name: 'Mrs. Dennis Schulist',\n    username: 'Leopoldo_Corkery',\n    email: 'Karley_Dach@jasper.info',\n  },\n  {\n    id: 7,\n    name: 'Kurtis Weissnat',\n    username: 'Elwyn.Skiles',\n    email: 'Telly.Hoeger@billy.biz',\n  },\n  {\n    id: 8,\n    name: 'Nicholas Runolfsdottir V',\n    username: 'Maxime_Nienow',\n    email: 'Sherwood@rosamond.me',\n  },\n  {\n    id: 9,\n    name: 'Glenna Reichert',\n    username: 'Delphine',\n    email: 'Chaim_McDermott@dana.io',\n  },\n  {\n    id: 10,\n    name: 'Clementina DuBuque',\n    username: 'Moriah.Stanton',\n    email: 'Rey.Padberg@karina.biz',\n  },\n];\n","import React from 'react';\nimport { User } from '../../type/User';\n\ntype Props = {\n  user: User;\n};\n\nexport const UserInfo: React.FC<Props> = ({ user }) => {\n  const { email, name } = user;\n\n  return (\n    <a className=\"UserInfo\" href={`mailto:${email}`}>\n      {name}\n    </a>\n  );\n};\n","import cn from 'classnames';\nimport React from 'react';\nimport { UserInfo } from '../UserInfo';\nimport { Todo } from '../../type/Todo';\n\ntype Props = {\n  todo: Todo;\n};\nexport const TodoInfo: React.FC<Props> = ({ todo }) => {\n  const {\n    id, title, completed, user,\n  } = todo;\n\n  return (\n    <article\n      data-id={`${id}`}\n      className={cn('TodoInfo', { 'TodoInfo--completed': completed })}\n    >\n      <h2 className=\"TodoInfo__title\">{title}</h2>\n\n      {user && <UserInfo user={user} />}\n\n    </article>\n  );\n};\n","import { Todo } from '../../type/Todo';\nimport { TodoInfo } from '../TodoInfo';\n\ntype Props = {\n  todos: Todo[];\n};\n\nexport const TodoList: React.FC<Props> = ({ todos }) => {\n  return (\n    <section className=\"TodoList\">\n      {todos.map(todo => (\n        <TodoInfo\n          key={todo.id}\n          todo={todo}\n        />\n      ))}\n\n    </section>\n  );\n};\n","import React, { useState } from 'react';\n\nimport './App.scss';\n\nimport usersFromServer from './api/users';\nimport todosFromServer from './api/todos';\n\nimport { TodoList } from './components/TodoList';\nimport { Todo } from './type/Todo';\n\nfunction getUserById(userId: number) {\n  return usersFromServer.find((user) => user.id === userId) || null;\n}\n\nconst initialTodo: Todo[] = todosFromServer.map((todo) => ({\n  ...todo,\n  user: getUserById(todo.userId),\n}));\n\nexport const App = () => {\n  const [todos, setTodos] = useState(initialTodo);\n\n  const [title, setTitle] = useState('');\n  const [hasTitleError, setHasTitleError] = useState(false);\n\n  const [userId, setUserId] = useState(0);\n  const [hasUserError, setHasUserError] = useState(false);\n\n  const handleResetForm = () => {\n    setTitle('');\n    setUserId(0);\n  };\n\n  const addNewTodo = () => {\n    const todoId: number = Math.max(...todos.map(todo => todo.id)) + 1;\n\n    const newTodoCard: Todo = {\n      id: todoId,\n      title,\n      completed: false,\n      userId,\n      user: getUserById(userId),\n    };\n\n    setTodos((prevTodo) => [...prevTodo, newTodoCard]);\n\n    handleResetForm();\n  };\n\n  const handleTitleChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setTitle(event.target.value);\n    setHasTitleError(false);\n  };\n\n  const handleUserIdChange = (event: React.ChangeEvent<HTMLSelectElement>) => {\n    setUserId(+event.target.value);\n    setHasUserError(false);\n  };\n\n  const handleSubmit = (event: React.FormEvent) => {\n    event.preventDefault();\n\n    setHasTitleError(!title);\n    setHasUserError(!userId);\n\n    if (title && userId) {\n      return addNewTodo();\n    }\n\n    return null;\n  };\n\n  return (\n    <div className=\"App section box\">\n      <h1 className=\"title\">Add todo form</h1>\n\n      <form\n        onSubmit={handleSubmit}\n        action=\"/api/todos\"\n        method=\"POST\"\n      >\n        <div className=\"field\">\n          <label htmlFor=\"title\" className=\"label\">\n            {'Title: '}\n            <input\n              value={title}\n              placeholder=\"Enter title\"\n              id=\"title\"\n              type=\"text\"\n              data-cy=\"titleInput\"\n              onChange={handleTitleChange}\n              className=\"input is-small\"\n            />\n\n          </label>\n\n          {hasTitleError && <span className=\"error\">Please enter a title</span>}\n        </div>\n\n        <div className=\"field\">\n          <label htmlFor=\"users\" className=\"label\">\n            {'Users: '}\n            <select\n              id=\"users\"\n              data-cy=\"userSelect\"\n              value={userId}\n              onChange={handleUserIdChange}\n              className=\"select is-small\"\n            >\n              <option value=\"0\" disabled>\n                Choose a user\n              </option>\n\n              {usersFromServer.map((user) => (\n                <option value={user.id} key={user.id}>\n                  {user.name}\n                </option>\n              ))}\n            </select>\n          </label>\n\n          {hasUserError && <p className=\"error\">Please choose a user</p>}\n        </div>\n\n        <button\n          type=\"submit\"\n          data-cy=\"submitButton\"\n          className=\"button\"\n        >\n          Add\n        </button>\n      </form>\n\n      <TodoList\n        todos={todos}\n      />\n\n    </div>\n  );\n};\n","export default [\n  {\n    id: 1,\n    title: 'delectus aut autem',\n    completed: true,\n    userId: 1,\n  },\n  {\n    id: 15,\n    title: 'some other todo',\n    completed: false,\n    userId: 1,\n  },\n  {\n    id: 2,\n    title: 'quis ut nam facilis et officia qui',\n    completed: false,\n    userId: 4,\n  },\n];\n","import ReactDOM from 'react-dom';\nimport 'bulma';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}